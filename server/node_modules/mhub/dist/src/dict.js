"use strict";
/**
 * Simple dictionary, safe for arbitrary string keys.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class Dict {
    constructor() {
        // tslint:disable-next-line:no-null-keyword
        this._items = Object.create(null);
    }
    set(key, value) {
        this._items["$" + key] = value;
    }
    get(key) {
        return this._items["$" + key];
    }
    remove(key) {
        delete this._items["$" + key];
    }
    clear() {
        // tslint:disable-next-line:no-null-keyword
        this._items = Object.create(null);
    }
    keys() {
        const keys = [];
        for (const key in this._items) { // tslint:disable-line:forin
            keys.push(key.substr(1)); // strip the $
        }
        return keys;
    }
    forEach(cb) {
        for (const key in this._items) { // tslint:disable-line:forin
            cb(this._items[key], key.substr(1), this);
        }
    }
}
exports.Dict = Dict;
exports.default = Dict;
//# sourceMappingURL=dict.js.map